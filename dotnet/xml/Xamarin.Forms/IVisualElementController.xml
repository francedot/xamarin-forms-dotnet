<Type Name="IVisualElementController" FullName="Xamarin.Forms.IVisualElementController">
  <TypeSignature Language="C#" Value="public interface IVisualElementController : Xamarin.Forms.IElementController" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVisualElementController implements class Xamarin.Forms.IElementController" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.IVisualElementController" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVisualElementController&#xA;Implements IElementController" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.IElementController</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>For internal use by platform renderers.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BatchCommitted">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Xamarin.Forms.Internals.EventArg&lt;Xamarin.Forms.VisualElement&gt;&gt; BatchCommitted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Forms.Internals.EventArg`1&lt;class Xamarin.Forms.VisualElement&gt;&gt; BatchCommitted" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.IVisualElementController.BatchCommitted" />
      <MemberSignature Language="VB.NET" Value="Event BatchCommitted As EventHandler(Of EventArg(Of VisualElement)) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Forms.Internals.EventArg&lt;Xamarin.Forms.VisualElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Batched">
      <MemberSignature Language="C#" Value="public bool Batched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Batched" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IVisualElementController.Batched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Batched As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableLayout">
      <MemberSignature Language="C#" Value="public bool DisableLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableLayout" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IVisualElementController.DisableLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableLayout As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusChangeRequested">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Xamarin.Forms.VisualElement.FocusRequestArgs&gt; FocusChangeRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Forms.VisualElement/FocusRequestArgs&gt; FocusChangeRequested" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.IVisualElementController.FocusChangeRequested" />
      <MemberSignature Language="VB.NET" Value="Event FocusChangeRequested As EventHandler(Of VisualElement.FocusRequestArgs) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Forms.VisualElement+FocusRequestArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure (Xamarin.Forms.Internals.InvalidationTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateMeasure(valuetype Xamarin.Forms.Internals.InvalidationTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IVisualElementController.InvalidateMeasure(Xamarin.Forms.Internals.InvalidationTrigger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure (trigger As InvalidationTrigger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Xamarin.Forms.Internals.InvalidationTrigger" />
      </Parameters>
      <Docs>
        <param name="trigger">For internal use by the Xamarin.Forms platform.</param>
        <summary>For internal use by platform renderers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInNativeLayout">
      <MemberSignature Language="C#" Value="public bool IsInNativeLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInNativeLayout" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IVisualElementController.IsInNativeLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInNativeLayout As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNativeStateConsistent">
      <MemberSignature Language="C#" Value="public bool IsNativeStateConsistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNativeStateConsistent" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IVisualElementController.IsNativeStateConsistent" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNativeStateConsistent As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlatformEnabled">
      <MemberSignature Language="C#" Value="public bool IsPlatformEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlatformEnabled" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IVisualElementController.IsPlatformEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPlatformEnabled As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeSizeChanged">
      <MemberSignature Language="C#" Value="public void NativeSizeChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NativeSizeChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.IVisualElementController.NativeSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub NativeSizeChanged ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationProxy">
      <MemberSignature Language="C#" Value="public Xamarin.Forms.Internals.NavigationProxy NavigationProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Xamarin.Forms.Internals.NavigationProxy NavigationProxy" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.IVisualElementController.NavigationProxy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationProxy As NavigationProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Internals.NavigationProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by platform renderers.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>