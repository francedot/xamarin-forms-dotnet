<Type Name="ValueChangedEventArgs" FullName="Xamarin.Forms.ValueChangedEventArgs">
  <TypeSignature Language="C#" Value="public class ValueChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValueChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.ValueChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ValueChangedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="F#" Value="type ValueChangedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Event arguments for <c>ValueChanged</c> events. Provides both old and new values.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueChangedEventArgs (double oldValue, double newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 oldValue, float64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.ValueChangedEventArgs.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (oldValue As Double, newValue As Double)" />
      <MemberSignature Language="F#" Value="new Xamarin.Forms.ValueChangedEventArgs : double * double -&gt; Xamarin.Forms.ValueChangedEventArgs" Usage="new Xamarin.Forms.ValueChangedEventArgs (oldValue, newValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Double" />
        <Parameter Name="newValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public double NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NewValue" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.ValueChangedEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As Double" />
      <MemberSignature Language="F#" Value="member this.NewValue : double" Usage="Xamarin.Forms.ValueChangedEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the new value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public double OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OldValue" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.ValueChangedEventArgs.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As Double" />
      <MemberSignature Language="F#" Value="member this.OldValue : double" Usage="Xamarin.Forms.ValueChangedEventArgs.OldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the old value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>