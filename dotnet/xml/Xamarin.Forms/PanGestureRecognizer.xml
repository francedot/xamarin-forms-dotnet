<Type Name="PanGestureRecognizer" FullName="Xamarin.Forms.PanGestureRecognizer">
  <TypeSignature Language="C#" Value="public class PanGestureRecognizer : Xamarin.Forms.GestureRecognizer, Xamarin.Forms.IPanGestureController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PanGestureRecognizer extends Xamarin.Forms.GestureRecognizer implements class Xamarin.Forms.IPanGestureController" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.PanGestureRecognizer" />
  <TypeSignature Language="VB.NET" Value="Public Class PanGestureRecognizer&#xA;Inherits GestureRecognizer&#xA;Implements IPanGestureController" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.GestureRecognizer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.IPanGestureController</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A gesture recognizer for panning content that is larger than its parent view.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PanGestureRecognizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.PanGestureRecognizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PanUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Xamarin.Forms.PanUpdatedEventArgs&gt; PanUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Xamarin.Forms.PanUpdatedEventArgs&gt; PanUpdated" />
      <MemberSignature Language="DocId" Value="E:Xamarin.Forms.PanGestureRecognizer.PanUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Event PanUpdated As EventHandler(Of PanUpdatedEventArgs) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Xamarin.Forms.PanUpdatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event that is raised when the pan gesture changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPan">
      <MemberSignature Language="C#" Value="public void SendPan (Xamarin.Forms.Element sender, double totalX, double totalY, int gestureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendPan(class Xamarin.Forms.Element sender, float64 totalX, float64 totalY, int32 gestureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.PanGestureRecognizer.SendPan(Xamarin.Forms.Element,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendPan (sender As Element, totalX As Double, totalY As Double, gestureId As Integer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Xamarin.Forms.Element" />
        <Parameter Name="totalX" Type="System.Double" />
        <Parameter Name="totalY" Type="System.Double" />
        <Parameter Name="gestureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">For internal use by the Xamarin.Forms platform.</param>
        <param name="totalX">For internal use by the Xamarin.Forms platform.</param>
        <param name="totalY">For internal use by the Xamarin.Forms platform.</param>
        <param name="gestureId">For internal use by the Xamarin.Forms platform.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPanCanceled">
      <MemberSignature Language="C#" Value="public void SendPanCanceled (Xamarin.Forms.Element sender, int gestureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendPanCanceled(class Xamarin.Forms.Element sender, int32 gestureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.PanGestureRecognizer.SendPanCanceled(Xamarin.Forms.Element,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendPanCanceled (sender As Element, gestureId As Integer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Xamarin.Forms.Element" />
        <Parameter Name="gestureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">For internal use by the Xamarin.Forms platform..</param>
        <param name="gestureId">For internal use by the Xamarin.Forms platform.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPanCompleted">
      <MemberSignature Language="C#" Value="public void SendPanCompleted (Xamarin.Forms.Element sender, int gestureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendPanCompleted(class Xamarin.Forms.Element sender, int32 gestureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.PanGestureRecognizer.SendPanCompleted(Xamarin.Forms.Element,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendPanCompleted (sender As Element, gestureId As Integer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Xamarin.Forms.Element" />
        <Parameter Name="gestureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">For internal use by the Xamarin.Forms platform.</param>
        <param name="gestureId">For internal use by the Xamarin.Forms platform.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPanStarted">
      <MemberSignature Language="C#" Value="public void SendPanStarted (Xamarin.Forms.Element sender, int gestureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendPanStarted(class Xamarin.Forms.Element sender, int32 gestureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.PanGestureRecognizer.SendPanStarted(Xamarin.Forms.Element,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendPanStarted (sender As Element, gestureId As Integer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Xamarin.Forms.Element" />
        <Parameter Name="gestureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">For internal use by the Xamarin.Forms platform.</param>
        <param name="gestureId">For internal use by the Xamarin.Forms platform.</param>
        <summary>For internal use by the Xamarin.Forms platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchPoints">
      <MemberSignature Language="C#" Value="public int TouchPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TouchPoints" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.PanGestureRecognizer.TouchPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property TouchPoints As Integer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of touch points in the gesture.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchPointsProperty">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.BindableProperty TouchPointsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Xamarin.Forms.BindableProperty TouchPointsProperty" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.PanGestureRecognizer.TouchPointsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchPointsProperty As BindableProperty " />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Xamarin.Forms.PanGestureRecognizer.TouchPoints" /> property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>