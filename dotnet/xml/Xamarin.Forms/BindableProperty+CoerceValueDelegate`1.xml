<Type Name="BindableProperty+CoerceValueDelegate&lt;TPropertyType&gt;" FullName="Xamarin.Forms.BindableProperty+CoerceValueDelegate&lt;TPropertyType&gt;">
  <TypeSignature Language="C#" Value="public delegate TPropertyType BindableProperty.CoerceValueDelegate&lt;TPropertyType&gt;(BindableObject bindable, TPropertyType value);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed BindableProperty/CoerceValueDelegate`1&lt;TPropertyType&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.BindableProperty.CoerceValueDelegate`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function BindableProperty.CoerceValueDelegate(Of TPropertyType)(bindable As BindableObject, value As TPropertyType) As TPropertyType " />
  <TypeSignature Language="F#" Value="type BindableProperty.CoerceValueDelegate&lt;'PropertyType&gt; = delegate of BindableObject * 'PropertyType -&gt; 'PropertyType" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TPropertyType" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="bindable" Type="Xamarin.Forms.BindableObject" />
    <Parameter Name="value" Type="TPropertyType" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TPropertyType</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TPropertyType">The type of the bound property.</typeparam>
    <param name="bindable">The bindable object that contains the property.</param>
    <param name="value">The value to coerce.</param>
    <summary>Strongly-typed delegate for BindableProperty.CoerceValue.</summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>