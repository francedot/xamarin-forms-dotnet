<Type Name="Size" FullName="Xamarin.Forms.Size">
  <TypeSignature Language="C#" Value="public struct Size" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Size extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.Size" />
  <TypeSignature Language="VB.NET" Value="Public Structure Size" />
  <TypeSignature Language="F#" Value="type Size = struct" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Width={Width}, Height={Height}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Struct defining height and width as a pair of doubles.</summary>
    <remarks>
      <para>Application developers should be aware of the limits of floating-point representations, specifically the possibility of incorrect comparisons and equality checks for values with small differences. David Goldberg's paper <format type="text/html"><a href="http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html">What Every Computer Scientist Should Know About Floating-Point Arithmetic</a></format> describes the issues excellently. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Size (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Double, height As Double)" />
      <MemberSignature Language="F#" Value="new Xamarin.Forms.Size : double * double -&gt; Xamarin.Forms.Size" Usage="new Xamarin.Forms.Size (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="size.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to which <c>this</c> is being compared.</param>
        <summary>Whether <c>this</c><see cref="T:Xamarin.Forms.Size" /> is equivalent to <paramref name="obj" />.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:Xamarin.Forms.Size" /> whose values are identical to <c>this</c><see cref="T:Xamarin.Forms.Size" />'s <see cref="P:Xamarin.Forms.Size.Height" /> and <see cref="P:Xamarin.Forms.Size.Width" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Xamarin.Forms.Size other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype Xamarin.Forms.Size other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.Equals(Xamarin.Forms.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Size) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Xamarin.Forms.Size -&gt; bool" Usage="size.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Xamarin.Forms.Size" />
      </Parameters>
      <Docs>
        <param name="other">The <see cref="T:Xamarin.Forms.Size" /> to which <c>this</c> is being compared.</param>
        <summary>Whether <c>this</c><see cref="T:Xamarin.Forms.Size" /> is equivalent to <paramref name="other" />.</summary>
        <returns>
          <see langword="true" /> if <paramref name="other" />'s values are identical to <c>this</c><see cref="T:Xamarin.Forms.Size" />'s <see cref="P:Xamarin.Forms.Size.Height" /> and <see cref="P:Xamarin.Forms.Size.Width" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="size.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash value for the <see cref="T:Xamarin.Forms.Size" />.</summary>
        <returns>A value intended for efficient insertion and lookup in hashtable-based data structures.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Size.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="Xamarin.Forms.Size.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Magnitude along the vertical axis, in platform-specific units.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Size.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="Xamarin.Forms.Size.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether the <see cref="T:Xamarin.Forms.Size" /> has <see cref="P:Xamarin.Forms.Size.Height" /> and <see cref="P:Xamarin.Forms.Size.Width" /> of 0.0.</summary>
        <value>
          <see langword="true" /> if both <see cref="P:Xamarin.Forms.Size.Height" /> and <see cref="P:Xamarin.Forms.Width" /> are 0.0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Size operator + (Xamarin.Forms.Size s1, Xamarin.Forms.Size s2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Xamarin.Forms.Size op_Addition(valuetype Xamarin.Forms.Size s1, valuetype Xamarin.Forms.Size s2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.op_Addition(Xamarin.Forms.Size,Xamarin.Forms.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (s1 As Size, s2 As Size) As Size" />
      <MemberSignature Language="F#" Value="static member ( + ) : Xamarin.Forms.Size * Xamarin.Forms.Size -&gt; Xamarin.Forms.Size" Usage="s1 + s2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="Xamarin.Forms.Size" />
        <Parameter Name="s2" Type="Xamarin.Forms.Size" />
      </Parameters>
      <Docs>
        <param name="s1">A <see cref="T:Xamarin.Forms.Size" /> to be added.</param>
        <param name="s2">A <see cref="T:Xamarin.Forms.Size" /> to be added.</param>
        <summary>Returns a new <see cref="T:Xamarin.Forms.Size" /> whose <see cref="P:Xamarin.Forms.Size.Height" /> and <see cref="P:Xamarin.Forms.Size.Width" /> are the sum of the component's height and width.</summary>
        <returns>A <see cref="T:Xamarin.Forms.Size" /> whose <see cref="P:Xamarin.Forms.Size.Width" /> is equal to <c>s1.Width + s2.Width</c> and whose <see cref="P:Xamarin.Forms.Size.Height" /> is equal to <c>sz1.Height + sz2.Height</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Xamarin.Forms.Size s1, Xamarin.Forms.Size s2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Xamarin.Forms.Size s1, valuetype Xamarin.Forms.Size s2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.op_Equality(Xamarin.Forms.Size,Xamarin.Forms.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (s1 As Size, s2 As Size) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Xamarin.Forms.Size * Xamarin.Forms.Size -&gt; bool" Usage="s1 = s2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="Xamarin.Forms.Size" />
        <Parameter Name="s2" Type="Xamarin.Forms.Size" />
      </Parameters>
      <Docs>
        <param name="s1">A <see cref="T:Xamarin.Forms.Size" /> to be compared.</param>
        <param name="s2">A <see cref="T:Xamarin.Forms.Size" /> to be compared.</param>
        <summary>Whether two <see cref="T:Xamarin.Forms.Size" />s have equal values.</summary>
        <returns>
          <see langword="true" /> if <paramref name="s1" /> and <paramref name="s2" /> have equal values for <see cref="P:Xamarin.Forms.Size.Height" /> and <see cref="P:Xamarin.Forms.Size.Width" />.</returns>
        <remarks>
          <para>Application developers should be aware that <see cref="P:Xamarin.Forms.Size.Width" /> and <see cref="P:Xamarin.Forms.Size.Height" /> are stored internally as <see langword="double" />s. Values with small differences may compare incorrectly due to internal rounding limitations.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Xamarin.Forms.Point (Xamarin.Forms.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Xamarin.Forms.Point op_Explicit(valuetype Xamarin.Forms.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.op_Explicit(Xamarin.Forms.Size)~Xamarin.Forms.Point" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Xamarin.Forms.Size -&gt; Xamarin.Forms.Point" Usage="Xamarin.Forms.Size.op_Explicit size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Xamarin.Forms.Size" />
      </Parameters>
      <Docs>
        <param name="size">The <see cref="T:Xamarin.Forms.Size" /> to be converted to a <see cref="T:Xamarin.Forms.Point" />.</param>
        <summary>Returns a new <see cref="T:Xamarin.Forms.Point" /> based on a <see cref="T:Xamarin.Forms.Size" />.</summary>
        <returns>A <see cref="T:Xamarin.Forms.Point" /> whose <see cref="P:Xamarin.Forms.Point.X" /> and <see cref="P:Xamarin.Forms.Point.Y" /> are equal to <paramref name="size" />'s <see cref="P:Xamarin.Forms.Size.Width" /> and <see cref="P:Xamarin.Forms.Size.Height" />, respectively.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Xamarin.Forms.Size s1, Xamarin.Forms.Size s2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Xamarin.Forms.Size s1, valuetype Xamarin.Forms.Size s2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.op_Inequality(Xamarin.Forms.Size,Xamarin.Forms.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (s1 As Size, s2 As Size) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Xamarin.Forms.Size * Xamarin.Forms.Size -&gt; bool" Usage="Xamarin.Forms.Size.op_Inequality (s1, s2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="Xamarin.Forms.Size" />
        <Parameter Name="s2" Type="Xamarin.Forms.Size" />
      </Parameters>
      <Docs>
        <param name="s1">The first <see cref="T:Xamarin.Forms.Size" /> to compare.</param>
        <param name="s2">The second <see cref="T:Xamarin.Forms.Size" /> to compare.</param>
        <summary>Whether two <see cref="T:Xamarin.Forms.Size" />s have unequal values.</summary>
        <returns>
          <see langword="true" /> if <paramref name="s1" /> and <paramref name="s2" /> have unequal values for either <see cref="P:Xamarin.Forms.Size.Height" /> or <see cref="P:Xamarin.Forms.Size.Width" />.</returns>
        <remarks>
          <para>Application developers should be aware that <see cref="P:Xamarin.Forms.Size.Width" /> and <see cref="P:Xamarin.Forms.Size.Height" /> are stored internally as <see langword="double" />s. Values with small differences may compare incorrectly due to internal rounding limitations.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Size operator * (Xamarin.Forms.Size s1, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Xamarin.Forms.Size op_Multiply(valuetype Xamarin.Forms.Size s1, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.op_Multiply(Xamarin.Forms.Size,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (s1 As Size, value As Double) As Size" />
      <MemberSignature Language="F#" Value="static member ( * ) : Xamarin.Forms.Size * double -&gt; Xamarin.Forms.Size" Usage="s1 * value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="Xamarin.Forms.Size" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="s1">A <see cref="T:Xamarin.Forms.Size" /> to be scaled.</param>
        <param name="value">A factor by which to multiple <paramref name="s1" />'s <see cref="P:Xamarin.Forms.Size.Width" /> and <see cref="P:Xamarin.Forms.Size.Height" /> values.</param>
        <summary>Scales both <see cref="P:Xamarin.Forms.Size.Width" /> and <see cref="P:Xamarin.Forms.Size.Height" />.</summary>
        <returns>A new <see cref="T:Xamarin.Forms.Size" /> whose <see cref="P:Xamarin.Forms.Size.Width" /> and <see cref="P:Xamarin.Forms.Size.Height" /> have been scaled by <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static Xamarin.Forms.Size operator - (Xamarin.Forms.Size s1, Xamarin.Forms.Size s2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Xamarin.Forms.Size op_Subtraction(valuetype Xamarin.Forms.Size s1, valuetype Xamarin.Forms.Size s2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.op_Subtraction(Xamarin.Forms.Size,Xamarin.Forms.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (s1 As Size, s2 As Size) As Size" />
      <MemberSignature Language="F#" Value="static member ( - ) : Xamarin.Forms.Size * Xamarin.Forms.Size -&gt; Xamarin.Forms.Size" Usage="s1 - s2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="Xamarin.Forms.Size" />
        <Parameter Name="s2" Type="Xamarin.Forms.Size" />
      </Parameters>
      <Docs>
        <param name="s1">A <see cref="T:Xamarin.Forms.Size" /> from whose values a size will be subtracted.</param>
        <param name="s2">The <see cref="T:Xamarin.Forms.Size" /> to subtract from <paramref name="s1" />.</param>
        <summary>Returns a new <see cref="T:Xamarin.Forms.Size" /> whose <see cref="P:Xamarin.Forms.Size.Height" /> and <see cref="P:Xamarin.Forms.Size.Width" /> are <paramref name="s1" />'s height and width minus the values in <paramref name="s2" />.</summary>
        <returns>A <see cref="T:Xamarin.Forms.Size" /> whose <see cref="P:Xamarin.Forms.Size.Width" /> is equal to <c>s1.Width - s2.Width</c> and whose <see cref="P:Xamarin.Forms.Size.Height" /> is equal to <c>sz1.Height - sz2.Height</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Size.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="size.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a human-readable representation of the <see cref="T:Xamarin.Forms.Size" />.</summary>
        <returns>The format has the pattern "{Width={0} Height={1}}".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Xamarin.Forms.Size.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="Xamarin.Forms.Size.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Magnitude along the horizontal axis, in platform-defined units.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly Xamarin.Forms.Size Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Xamarin.Forms.Size Zero" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.Size.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Size " />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : Xamarin.Forms.Size" Usage="Xamarin.Forms.Size.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:Xamarin.Forms.Size" /> whose values for height and width are 0.0.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>