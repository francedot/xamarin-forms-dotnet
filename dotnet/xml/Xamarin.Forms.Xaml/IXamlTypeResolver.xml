<Type Name="IXamlTypeResolver" FullName="Xamarin.Forms.Xaml.IXamlTypeResolver">
  <TypeSignature Language="C#" Value="public interface IXamlTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlTypeResolver" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.Xaml.IXamlTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlTypeResolver" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Interface defining the ability to resolve a qualified type name into a Type.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public Type Resolve (string qualifiedTypeName, IServiceProvider serviceProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type Resolve(string qualifiedTypeName, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Xaml.IXamlTypeResolver.Resolve(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (qualifiedTypeName As String, Optional serviceProvider As IServiceProvider = null) As Type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedTypeName" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="qualifiedTypeName">The qualified type name to resolve.</param>
        <param name="serviceProvider">The service that provides the value.</param>
        <summary>For internal use by the XAML engine.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolve">
      <MemberSignature Language="C#" Value="public bool TryResolve (string qualifiedTypeName, out Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolve(string qualifiedTypeName, [out] class System.Type&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Xaml.IXamlTypeResolver.TryResolve(System.String,System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolve (qualifiedTypeName As String, ByRef type As Type) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedTypeName" Type="System.String" />
        <Parameter Name="type" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="qualifiedTypeName">The qualified type name to resolve.</param>
        <param name="type">The type to resolve.</param>
        <summary>Tries to resolve a type name, putting the type value in <paramref name="type" />, and returns a Boolean value that indicates whether the operation succeeded.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>